{
  "custom": {
    "editSchedule": []
  },
  "params": {
    "mode": "add",
    "selectedSchedule": ""
  },
  "propConfig": {
    "custom.editSchedule": {
      "binding": {
        "config": {
          "struct": {
            "mode": "{view.params.mode}",
            "selectedSchedule": "{view.params.selectedSchedule}"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\tselectedSchedule \u003d value[\"selectedSchedule\"]\n\tmode \u003d value[\"mode\"]\n\t\n\t# If editing a schedule, try to get the schedule from the Gateway.\n\tif mode \u003d\u003d \"add\":\n\t\treturn []\n\telse:\n\t\ttry:\n\t\t\tschedule \u003d system.user.getSchedule(selectedSchedule)\n\t\t\tif schedule.getType() \u003d\u003d \"basic schedule\":\n\t\t\t\tscheduleObject \u003d {\n\t\t\t\t\t\u0027isAllDays\u0027:\t\tschedule.isAllDays(),\n\t\t\t\t\t\u0027isFriday\u0027:\t\t\tschedule.isFriday(),\n\t\t\t\t\t\u0027isMonday\u0027:\t\t\tschedule.isMonday(),\n\t\t\t\t\t\u0027isObserveHolidays\u0027:schedule.isObserveHolidays(), \n\t\t\t\t\t\u0027isRepeating\u0027:\t\tschedule.isRepeating(),\n\t\t\t\t\t\u0027isSaturday\u0027:\t\tschedule.isSaturday(),\n\t\t\t\t\t\u0027isSunday\u0027:\t\t\tschedule.isSunday(),\n\t\t\t\t\t\u0027isThursday\u0027:\t\tschedule.isThursday(),\n\t\t\t\t\t\u0027isTuesday\u0027:\t\tschedule.isTuesday() ,\n\t\t\t\t\t\u0027isUseDays\u0027:\t\tschedule.isUseDays(),\n\t\t\t\t\t\u0027isWednesday\u0027:\t\tschedule.isWednesday(),\n\t\t\t\t\t\u0027isWeekDays\u0027:\t\tschedule.isWeekDays(),\n\t\t\t\t\t\u0027allDayTime\u0027:\t    schedule.getAllDayTime(),\n\t\t\t\t\t\u0027fridayTime\u0027:\t    schedule.getFridayTime(),\n\t\t\t\t\t\u0027mondayTime\u0027:    \tschedule.getMondayTime(),\n\t\t\t\t\t\u0027repeat\u0027:\t\t    schedule.getRepeat(),\n\t\t\t\t\t\u0027repeatOff\u0027:\t\tschedule.getRepeatOff(),\n\t\t\t\t\t\u0027repeatOn\u0027:\t\t    schedule.getRepeatOn(),\n\t\t\t\t\t\u0027saturdayTime\u0027:\t    schedule.getSaturdayTime(),\n\t\t\t\t\t\u0027startingAt\u0027:\t    schedule.getStartingAt(),\n\t\t\t\t\t\u0027sundayTime\u0027:\t    schedule.getSundayTime(),\n\t\t\t\t\t\u0027thursdayTime\u0027:   \tschedule.getThursdayTime(),\n\t\t\t\t\t\u0027tuesdayTime\u0027:\t    schedule.getTuesdayTime(),\n\t\t\t\t\t\u0027type\u0027:\t\t\t    schedule.getType(),\n\t\t\t\t\t\u0027wednesdayTime\u0027:\tschedule.getWednesdayTime(),\n\t\t\t\t\t\u0027weekDayTime\u0027:   \tschedule.getWeekDayTime(),\n\t\t\t\t\t\u0027name\u0027:\t\t\t    schedule.getName(), \n\t\t\t\t\t\u0027description\u0027:\t    schedule.getDescription()\n\t\t\t\t}\n\t\t\t\treturn scheduleObject\n\t\t\telse:\n\t\t\t\traise Exception(\"This function doesn\u0027t support composite schedules or schedules other than basic schedules.\")\n\t\t\t\treturn []\n\t\texcept:\n\t\t\treturn []",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.error": {
      "binding": {
        "config": {
          "expression": "if(({/root/Name ObserveHolidays/Name/Name Input/Error Icon.custom.errorMessage}\t\t+ \r\n\t{/root/Description Count/Count.custom.errorMessage}\t\t\t\t\t\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/All Days/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Week Days/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Monday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Tuesday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Wednesday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Thursday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Friday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Saturday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Schedule/Schedule Inputs/Sunday/Icon.custom.errorMessage}\t\t\t+\r\n\t{/root/Schedule Repetition/Repetition/Repetition Inputs/StartingAt Input.custom.errorMessage}) !\u003d \"\", True, False )"
        },
        "type": "expr"
      }
    },
    "params.mode": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.selectedSchedule": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 813,
      "width": 943
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Header_Large"
                },
                "position": {
                  "size": "large"
                },
                "propConfig": {
                  "props.text": {
                    "binding": {
                      "config": {
                        "expression": "if ({view.params.mode} \u003d \"add\", \"Schedules \u003e Add Schedule\", \"Schedules \u003e Edit Schedule\")"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/Headers"
                  }
                },
                "type": "ia.display.label"
              },
              {
                "meta": {
                  "name": "Header_Small"
                },
                "propConfig": {
                  "props.text": {
                    "binding": {
                      "config": {
                        "expression": "if ({view.params.mode} \u003d \"add\", \"Add Schedule\", \"Edit Schedule\")"
                      },
                      "type": "expr"
                    }
                  }
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/Headers"
                  }
                },
                "type": "ia.display.label"
              }
            ],
            "meta": {
              "name": "Header Breakpoint"
            },
            "position": {
              "basis": "260px",
              "grow": 1
            },
            "props": {
              "breakpoint": 250
            },
            "type": "ia.container.breakpt"
          },
          {
            "meta": {
              "name": "Spacing"
            },
            "position": {
              "basis": "20px",
              "grow": 1,
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "ScheduleManagement/Headers"
              }
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\t# Navigate to Home view and clear selectedSchedule.\n\tsystem.perspective.sendMessage(messageType\u003d\u0027ScheduleManagement_ChangeViews\u0027, payload\u003d{\u0027view\u0027:\u0027home\u0027}, scope\u003d\"page\")\n\tself.view.params.selectedSchedule \u003d \"\""
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Label"
            },
            "position": {
              "shrink": 0
            },
            "props": {
              "style": {
                "classes": "ScheduleManagement/Headers",
                "cursor": "pointer",
                "fontSize": "15px"
              },
              "text": "\u003c Back"
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tfrom com.inductiveautomation.ignition.common.user.schedule import ScheduleRepeatStyle\n\tfrom com.inductiveautomation.ignition.common.user.schedule import BasicScheduleModel\n\n\t# If there are any error messages, open popup and display all the error messages.\n\tif self.view.custom.error \u003d\u003d True:\n\t\tparams \u003d {\n\t\t\t\u0027name\u0027:\t\t  \tself.parent.parent.getChild(\"Name ObserveHolidays\").getChild(\"Name\").getChild(\"Name Input\").getChild(\"Error Icon\").custom.errorMessage,\n\t\t\t\u0027description\u0027:\tself.parent.parent.getChild(\"Description Count\").getChild(\"Count\").custom.errorMessage,\n\t\t\t\u0027allDays\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"All Days\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027weekDays\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Week Days\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027monday\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Monday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027tuesday\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Tuesday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027wednesday\u0027:\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Wednesday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027thursday\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Thursday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027friday\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Friday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027saturday\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Saturday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027sunday\u0027:\t\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Schedule\").getChild(\"Schedule Inputs\").getChild(\"Sunday\").getChild(\"Icon\").custom.errorMessage,\n\t\t\t\u0027startingAt\u0027:\tself.parent.parent.getChild(\"Schedule Repetition\").getChild(\"Repetition\").getChild(\"Repetition Inputs\").getChild(\"StartingAt Input\").custom.errorMessage,\n\t\t\t\u0027mode\u0027:\t\t\t\u0027schedule\u0027\n\t\t}\n\t\tsystem.perspective.openPopup(id\u003d\u0027ScheduleManagement_SaveError\u0027, view\u003d\u0027ScheduleManagement/Views/Popups/Popup_SaveError\u0027, params\u003dparams, showCloseIcon\u003dFalse, draggable\u003dFalse)\n\telse:\n\t\t# Change repeat to a instance of ScheduleRepeatStyle class.\n\t\trepeat \u003d self.view.getChild(\"root\").custom.repeat\n\t\tif repeat \u003d\u003d \"Off\":\n\t\t\trepeatStyle \u003d ScheduleRepeatStyle.Off\n\t\telif repeat \u003d\u003d \"Daily\":\n\t\t\trepeatStyle \u003d ScheduleRepeatStyle.Daily\n\t\telse:\n\t\t\trepeatStyle \u003d ScheduleRepeatStyle.Weekly\n\t\t\n\t\t# Create a basic schedule model and set the parameters using the input values from the view.\n\t\tscheduleObject \u003d BasicScheduleModel()\n\t\t\n\t\tscheduleObject.setAllDays(self.view.getChild(\"root\").custom.allDaysSelected)\n\t\tscheduleObject.setFriday(self.view.getChild(\"root\").custom.fridaySelected)\n\t\tscheduleObject.setMonday(self.view.getChild(\"root\").custom.mondaySelected)\n\t\tscheduleObject.setObserveHolidays(self.view.getChild(\"root\").custom.observeHolidays)\n\t\tscheduleObject.setSaturday(self.view.getChild(\"root\").custom.saturdaySelected)\n\t\tscheduleObject.setSunday(self.view.getChild(\"root\").custom.sundaySelected)\n\t\tscheduleObject.setThursday(self.view.getChild(\"root\").custom.thursdaySelected)\n\t\tscheduleObject.setTuesday(self.view.getChild(\"root\").custom.tuesdaySelected)\n\t\tscheduleObject.setWednesday(self.view.getChild(\"root\").custom.wednesdaySelected)\n\t\tscheduleObject.setWeekDays(self.view.getChild(\"root\").custom.weekDaysSelected)\n\t\tscheduleObject.setAllDayTime(self.view.getChild(\"root\").custom.allDaysTimeRange)\n\t\tscheduleObject.setFridayTime(self.view.getChild(\"root\").custom.fridayTimeRange)\n\t\tscheduleObject.setMondayTime(self.view.getChild(\"root\").custom.mondayTimeRange)\n\t\tscheduleObject.setSaturdayTime(self.view.getChild(\"root\").custom.saturdayTimeRange)\t\t\t\n\t\tscheduleObject.setSundayTime(self.view.getChild(\"root\").custom.sundayTimeRange)\n\t\tscheduleObject.setThursdayTime(self.view.getChild(\"root\").custom.thursdayTimeRange)\n\t\tscheduleObject.setTuesdayTime(self.view.getChild(\"root\").custom.tuesdayTimeRange)\n\t\tscheduleObject.setWednesdayTime(self.view.getChild(\"root\").custom.wednesdayTimeRange)\n\t\tscheduleObject.setWeekDayTime(self.view.getChild(\"root\").custom.weekDaysTimeRange)\n\t\tscheduleObject.setName(self.view.getChild(\"root\").custom.name)\n\t\tscheduleObject.setDescription(self.view.getChild(\"root\").custom.description)\n\t\tscheduleObject.setRepeat(repeatStyle)\n\t\tscheduleObject.setRepeatOff(self.view.getChild(\"root\").custom.daysWeeksOff)\n\t\tscheduleObject.setRepeatOn(self.view.getChild(\"root\").custom.daysWeeksOn)\n\t\tscheduleObject.setStartingAt(self.view.getChild(\"root\").custom.startingAt)\t\t\n\t\t\n\t\t# If editing, edit the current matching schedule on the Gateway. Else, add new schedule to the Gateway. \n\t\tif self.view.params.mode \u003d\u003d \"edit\":\n\t\t\tsystem.user.editSchedule(self.view.custom.editSchedule.name, scheduleObject)\n\t\telse:\n\t\t\tsystem.user.addSchedule(scheduleObject)\n\n\t\t# Navigate back to home view.\n\t\tsystem.perspective.sendMessage(\u0027ScheduleManagement_ChangeViews\u0027, payload \u003d {\u0027view\u0027:\u0027home\u0027}, scope\u003d\"page\")"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button"
            },
            "position": {
              "basis": "50px",
              "shrink": 0
            },
            "props": {
              "image": {
                "position": "center"
              },
              "style": {
                "backgroundColor": "#E9E2E2",
                "color": "#000000",
                "marginBottom": "5px",
                "marginLeft": "10px",
                "marginRight": "5px",
                "marginTop": "5px"
              },
              "text": "Save"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "Header"
        },
        "position": {
          "basis": "40px",
          "shrink": 0
        },
        "props": {
          "alignItems": "center",
          "style": {
            "classes": "ScheduleManagement/Headers",
            "marginBottom": "10px",
            "overflow": "visible"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Name Header"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/SectionHeaders",
                    "marginLeft": "5px"
                  },
                  "text": "Name"
                },
                "type": "ia.display.label"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Name"
                    },
                    "position": {
                      "basis": "395px"
                    },
                    "propConfig": {
                      "props.text": {
                        "binding": {
                          "config": {
                            "path": "view.params.mode"
                          },
                          "transforms": [
                            {
                              "fallback": "{view.params.selectedSchedule}",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "add",
                                  "output": "\"\""
                                }
                              ],
                              "outputType": "expression",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "deferUpdates": false,
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginLeft": "5px"
                      }
                    },
                    "type": "ia.input.text-field"
                  },
                  {
                    "children": [
                      {
                        "events": {
                          "dom": {
                            "onMouseOut": {
                              "config": {
                                "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                              },
                              "scope": "G",
                              "type": "script"
                            },
                            "onMouseOver": {
                              "config": {
                                "script": "\tif self.parent.custom.errorMessage !\u003d \"\":\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                              },
                              "scope": "G",
                              "type": "script"
                            }
                          }
                        },
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.color": {
                            "binding": {
                              "config": {
                                "path": "this.props.path"
                              },
                              "transforms": [
                                {
                                  "fallback": "#228B22",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "material/error",
                                      "output": "#FF0000"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.path": {
                            "binding": {
                              "config": {
                                "path": "parent.custom.errorMessage"
                              },
                              "transforms": [
                                {
                                  "fallback": "material/error",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "",
                                      "output": "material/check_circle"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "type": "ia.display.icon"
                      },
                      {
                        "meta": {
                          "name": "Label"
                        },
                        "position": {
                          "basis": "50px",
                          "grow": 1
                        },
                        "propConfig": {
                          "position.display": {
                            "binding": {
                              "config": {
                                "path": "parent.custom.errorMessage"
                              },
                              "transforms": [
                                {
                                  "fallback": true,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "",
                                      "output": false
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "parent.custom.errorMessage"
                              },
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "backgroundColor": "#F6F6F6",
                            "borderColor": "#BBBBBB",
                            "borderStyle": "solid",
                            "borderWidth": "1px",
                            "fontSize": "12px",
                            "marginLeft": "0px",
                            "marginRight": "10px",
                            "marginTop": "26px",
                            "padding": "4px",
                            "position": "absolute",
                            "visibility": "hidden",
                            "width": "auto"
                          }
                        },
                        "type": "ia.display.label"
                      }
                    ],
                    "meta": {
                      "name": "Error Icon"
                    },
                    "position": {
                      "basis": "23px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "custom.errorMessage": {
                        "binding": {
                          "config": {
                            "path": "../Name.props.text"
                          },
                          "transforms": [
                            {
                              "code": "\t# Get schedule object\n\ttry:\n\t\tschedule \u003d system.user.getSchedule(value)\n\texcept:\n\t\tschedule \u003d None\n\t\n\t# If schedule doesn\u0027t match the name of the schedule editing or the schedule already exists, return error message.\n\tif schedule !\u003d None:\n\t\tif schedule.getName() \u003d\u003d self.view.params.selectedSchedule:\n\t\t\treturn \"\"\n\t\telse:\n\t\t\treturn \"Schedule name already exists.\"\n\telif value \u003d\u003d \"\" or value.isspace():\n\t\treturn \"Schedule name cannot be empty.\"\n\telse:\n\t\treturn \"\"\n",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "type": "ia.container.flex"
                  }
                ],
                "custom": {
                  "currName": "Example"
                },
                "meta": {
                  "name": "Name Input"
                },
                "position": {
                  "basis": "26px",
                  "shrink": 0
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/InputFont",
                    "overflow": "visible"
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Name"
            },
            "position": {
              "basis": "420px"
            },
            "props": {
              "direction": "column",
              "style": {
                "overflow": "visible"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "meta": {
              "name": "Spacing"
            },
            "position": {
              "basis": "65px"
            },
            "type": "ia.display.label"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "ObserverHolidays Header"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/SectionHeaders",
                    "marginBottom": "2px"
                  },
                  "text": "Observe Holidays"
                },
                "type": "ia.display.label"
              },
              {
                "meta": {
                  "name": "Checkbox"
                },
                "position": {
                  "basis": "26px",
                  "shrink": 0
                },
                "propConfig": {
                  "props.selected": {
                    "binding": {
                      "config": {
                        "path": "view.params.mode"
                      },
                      "transforms": [
                        {
                          "fallback": "{view.custom.editSchedule.isObserveHolidays}",
                          "inputType": "scalar",
                          "mappings": [
                            {
                              "input": "add",
                              "output": "false"
                            }
                          ],
                          "outputType": "expression",
                          "type": "map"
                        }
                      ],
                      "type": "property"
                    }
                  },
                  "props.text": {
                    "binding": {
                      "config": {
                        "path": "this.props.selected"
                      },
                      "transforms": [
                        {
                          "fallback": "True",
                          "inputType": "scalar",
                          "mappings": [
                            {
                              "input": false,
                              "output": "False"
                            }
                          ],
                          "outputType": "scalar",
                          "type": "map"
                        }
                      ],
                      "type": "property"
                    }
                  }
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/InputFont"
                  }
                },
                "type": "ia.input.checkbox"
              }
            ],
            "meta": {
              "name": "ObserveHolidays"
            },
            "position": {
              "shrink": 0
            },
            "props": {
              "direction": "column",
              "style": {
                "marginRight": "5px",
                "overflow": "visible"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Name ObserveHolidays"
        },
        "position": {
          "basis": "45px",
          "shrink": 0
        },
        "props": {
          "style": {
            "marginBottom": "10px",
            "marginRight": "5px",
            "overflow": "visible"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Description Header"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "style": {
            "classes": "ScheduleManagement/SectionHeaders",
            "marginLeft": "5px"
          },
          "text": "Description"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Description Input"
        },
        "position": {
          "basis": "80px",
          "shrink": 0
        },
        "propConfig": {
          "props.style.borderColor": {
            "binding": {
              "config": {
                "path": "../Description Count/Count.custom.errorMessage"
              },
              "transforms": [
                {
                  "fallback": "#FF0000",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": "",
                      "output": "#AAAAAA"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          },
          "props.style.borderStyle": {
            "binding": {
              "config": {
                "path": "../Description Count/Count.custom.errorMessage"
              },
              "transforms": [
                {
                  "fallback": "dashed",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": "",
                      "output": "solid"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          },
          "props.style.borderWidth": {
            "binding": {
              "config": {
                "path": "../Description Count/Count.custom.errorMessage"
              },
              "transforms": [
                {
                  "fallback": "2px",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": "",
                      "output": "1px"
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.mode"
              },
              "transforms": [
                {
                  "fallback": "{view.custom.editSchedule.description}",
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": "add",
                      "output": "\"\""
                    }
                  ],
                  "outputType": "expression",
                  "type": "map"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "deferUpdates": false,
          "style": {
            "classes": "ScheduleManagement/InputFont",
            "marginBottom": "1px",
            "marginLeft": "5px",
            "marginRight": "10px"
          },
          "wrap": "hard"
        },
        "type": "ia.input.text-area"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Spacing"
            },
            "position": {
              "basis": "20px",
              "grow": 1,
              "shrink": 0
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Count"
            },
            "position": {
              "basis": "50px"
            },
            "propConfig": {
              "custom.errorMessage": {
                "binding": {
                  "config": {
                    "expression": "len({.../Description Input.props.text})"
                  },
                  "transforms": [
                    {
                      "fallback": "Description field is more than 500 characters.",
                      "inputType": "range",
                      "mappings": [
                        {
                          "input": {
                            "max": 500,
                            "min": 0
                          },
                          "output": ""
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "expr"
                }
              },
              "props.style.color": {
                "binding": {
                  "config": {
                    "path": "this.custom.errorMessage"
                  },
                  "transforms": [
                    {
                      "fallback": "#FF0000",
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "",
                          "output": "#000000"
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.style.fontWeight": {
                "binding": {
                  "config": {
                    "path": "this.custom.errorMessage"
                  },
                  "transforms": [
                    {
                      "fallback": "bold",
                      "inputType": "scalar",
                      "mappings": [
                        {
                          "input": "",
                          "output": "normal"
                        }
                      ],
                      "outputType": "scalar",
                      "type": "map"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "len({.../Description Input.props.text}) + \"/500\""
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "fontSize": "10px",
                "marginRight": "10px",
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "Description Count"
        },
        "position": {
          "shrink": 0
        },
        "props": {
          "style": {
            "marginBottom": "5px",
            "overflow": "hidden"
          }
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "children": [
              {
                "meta": {
                  "name": "Schedule Headers"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/SectionHeaders",
                    "marginBottom": "10px",
                    "marginLeft": "5px"
                  },
                  "text": "Schedule"
                },
                "type": "ia.display.label"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isAllDays}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "true"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "All days",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "path": "../Checkbox.props.selected"
                              },
                              "type": "property"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "path": "this.props.enabled"
                              },
                              "transforms": [
                                {
                                  "fallback": "#D5D5D5",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "path": "this.props.enabled"
                              },
                              "transforms": [
                                {
                                  "fallback": "#808080",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.allDayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for All days.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "All Days"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isWeekDays}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Week days",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({../Checkbox.props.selected} \u0026 {../Checkbox.props.enabled}, True, False)"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | !{../Checkbox.props.selected}, False, True)"
                              },
                              "transforms": [
                                {
                                  "fallback": "#D5D5D5",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | !{../Checkbox.props.selected}, False, True)"
                              },
                              "transforms": [
                                {
                                  "fallback": "#808080",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.weekDayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Week days.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Week Days"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isMonday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Monday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.mondayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Monday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Monday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isTuesday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Tuesday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.tuesdayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Tuesday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Tuesday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isWednesday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Wednesday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.wednesdayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Wednesday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Wednesday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isThursday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Thursday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.thursdayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Thursday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Thursday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isFriday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Friday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.fridayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Friday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Friday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isSaturday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Saturday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.saturdayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Saturday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Saturday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "5px",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  },
                  {
                    "children": [
                      {
                        "meta": {
                          "name": "Checkbox"
                        },
                        "position": {
                          "basis": "125px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, True)"
                              },
                              "type": "expr"
                            }
                          },
                          "props.selected": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.isSunday}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "false"
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "fontSize": "14px",
                            "marginLeft": "10px"
                          },
                          "text": "Sunday",
                          "textPosition": "left"
                        },
                        "type": "ia.input.checkbox"
                      },
                      {
                        "meta": {
                          "name": "TextField"
                        },
                        "position": {
                          "basis": "100px",
                          "grow": 1
                        },
                        "propConfig": {
                          "props.enabled": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "code": "\tself.parent.getChild(\"Icon\").getChild(\"Icon\").refreshBinding(\u0027props.path\u0027)\n\treturn value",
                                  "type": "script"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.backgroundColor": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#FFFFFF"
                                    },
                                    {
                                      "input": false,
                                      "output": "#D5D5D5"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.style.color": {
                            "binding": {
                              "config": {
                                "expression": "if ({.../All Days/Checkbox.props.selected} | {.../Week Days/Checkbox.props.selected}, False, \r\nif ({../Checkbox.props.selected}, True, False))"
                              },
                              "transforms": [
                                {
                                  "fallback": null,
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": true,
                                      "output": "#000000"
                                    },
                                    {
                                      "input": false,
                                      "output": "#808080"
                                    }
                                  ],
                                  "outputType": "scalar",
                                  "type": "map"
                                }
                              ],
                              "type": "expr"
                            }
                          },
                          "props.text": {
                            "binding": {
                              "config": {
                                "path": "view.params.mode"
                              },
                              "transforms": [
                                {
                                  "fallback": "{view.custom.editSchedule.sundayTime}",
                                  "inputType": "scalar",
                                  "mappings": [
                                    {
                                      "input": "add",
                                      "output": "\"0:00-24:00\""
                                    }
                                  ],
                                  "outputType": "expression",
                                  "type": "map"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "deferUpdates": false,
                          "placeholder": "0:00-24:00",
                          "style": {
                            "classes": "ScheduleManagement/InputFont",
                            "height": "26px",
                            "opacity": "1"
                          }
                        },
                        "type": "ia.input.text-field"
                      },
                      {
                        "children": [
                          {
                            "events": {
                              "dom": {
                                "onMouseOut": {
                                  "config": {
                                    "script": "\tself.getSibling(\"Label\").props.style.visibility \u003d \"hidden\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                },
                                "onMouseOver": {
                                  "config": {
                                    "script": "\tif self.parent.custom.errorMessage:\n\t\tself.getSibling(\"Label\").props.style.visibility \u003d \"visible\""
                                  },
                                  "scope": "G",
                                  "type": "script"
                                }
                              }
                            },
                            "meta": {
                              "name": "Icon"
                            },
                            "position": {
                              "basis": "23px",
                              "shrink": 0
                            },
                            "propConfig": {
                              "props.color": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "#FF0000",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "#228B22"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.path": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": "material/error",
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": "material/check_circle"
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "maxHeight": "23px"
                              }
                            },
                            "type": "ia.display.icon"
                          },
                          {
                            "meta": {
                              "name": "Label"
                            },
                            "position": {
                              "basis": "50px",
                              "grow": 1
                            },
                            "propConfig": {
                              "position.display": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "transforms": [
                                    {
                                      "fallback": true,
                                      "inputType": "scalar",
                                      "mappings": [
                                        {
                                          "input": "",
                                          "output": false
                                        }
                                      ],
                                      "outputType": "scalar",
                                      "type": "map"
                                    }
                                  ],
                                  "type": "property"
                                }
                              },
                              "props.text": {
                                "binding": {
                                  "config": {
                                    "path": "parent.custom.errorMessage"
                                  },
                                  "type": "property"
                                }
                              }
                            },
                            "props": {
                              "style": {
                                "backgroundColor": "#F6F6F6",
                                "borderColor": "#BBBBBB",
                                "borderStyle": "solid",
                                "borderWidth": "1px",
                                "fontSize": "12px",
                                "marginLeft": "-50px",
                                "marginTop": "28px",
                                "padding": "4px",
                                "position": "absolute",
                                "visibility": "hidden",
                                "width": "auto",
                                "zIndex": 999999
                              }
                            },
                            "type": "ia.display.label"
                          }
                        ],
                        "meta": {
                          "name": "Icon"
                        },
                        "position": {
                          "basis": "23px",
                          "shrink": 0
                        },
                        "propConfig": {
                          "custom.errorMessage": {
                            "binding": {
                              "config": {
                                "path": "../TextField.props.text"
                              },
                              "transforms": [
                                {
                                  "code": "\timport re\n\t\n\t# Make sure input is in a time format, else catch all the errors.\n\terror \u003d 0\n\ttimes \u003d value.split(\",\")\n\tfor time in times:\n\t\ttime \u003d time.replace(\" \",\"\")\n\t\tif re.match(\u0027((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))-((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))\u0027, time) or re.match(\u0027^([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)-([01]?\\d|2[0-3]|24(?\u003d:00?$)):([0-5]\\d)$\u0027, time) or re.match(\"^$\",time):\n\t\t\terror |\u003d 0\n\t\telse:\n\t\t\terror |\u003d 1\n\t\n\t# If the errors are above 0, return error message.\n\tif error \u003e 0:\n\t\treturn \"Incorrect time format for Sunday.\"\n\telse:\n\t\treturn \"\"\n",
                                  "type": "script"
                                }
                              ],
                              "type": "property"
                            }
                          }
                        },
                        "props": {
                          "style": {
                            "overflow": "visible"
                          }
                        },
                        "type": "ia.container.flex"
                      }
                    ],
                    "meta": {
                      "name": "Sunday"
                    },
                    "position": {
                      "basis": "26px"
                    },
                    "props": {
                      "alignItems": "center",
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "overflow": "visible"
                      },
                      "wrap": "wrap"
                    },
                    "type": "ia.container.flex"
                  }
                ],
                "meta": {
                  "name": "Schedule Inputs"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "direction": "column"
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Schedule"
            },
            "position": {
              "basis": "300px",
              "grow": 1,
              "shrink": 0
            },
            "props": {
              "direction": "column",
              "style": {
                "marginBottom": "5px",
                "marginRight": "10px",
                "overflow": "visible"
              }
            },
            "type": "ia.container.flex"
          },
          {
            "children": [
              {
                "meta": {
                  "name": "Repetition Header"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "style": {
                    "classes": "ScheduleManagement/SectionHeaders",
                    "marginBottom": "5px",
                    "marginLeft": "5px"
                  },
                  "text": "Repetition"
                },
                "type": "ia.display.label"
              },
              {
                "children": [
                  {
                    "meta": {
                      "name": "Repetition Dropdown Header"
                    },
                    "position": {
                      "shrink": 0
                    },
                    "props": {
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "fontSize": "14px",
                        "marginBottom": "2px"
                      },
                      "text": "Repeat / Alternate"
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "Repetition Dropdown"
                    },
                    "position": {
                      "basis": "26px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.value": {
                        "binding": {
                          "config": {
                            "path": "view.params.mode"
                          },
                          "transforms": [
                            {
                              "fallback": "{view.custom.editSchedule.repeat}",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "add",
                                  "output": "\"Off\""
                                }
                              ],
                              "outputType": "expression",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "dropdownOptionStyle": {
                        "classes": "ScheduleManagement/InputFont"
                      },
                      "options": [
                        {
                          "label": "Off",
                          "value": "Off"
                        },
                        {
                          "label": "Daily",
                          "value": "Daily"
                        },
                        {
                          "label": "Weekly",
                          "value": "Weekly"
                        }
                      ],
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "marginBottom": "10px"
                      }
                    },
                    "type": "ia.input.dropdown"
                  },
                  {
                    "meta": {
                      "name": "DaysWeeksOn Header"
                    },
                    "position": {
                      "shrink": 0
                    },
                    "props": {
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "fontSize": "14px",
                        "marginBottom": "2px"
                      },
                      "text": "# Days/Weeks On"
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "DaysWeeksOn"
                    },
                    "position": {
                      "basis": "26px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.enabled": {
                        "binding": {
                          "config": {
                            "path": "../Repetition Dropdown.props.value"
                          },
                          "transforms": [
                            {
                              "fallback": true,
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "Off",
                                  "output": false
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.value": {
                        "binding": {
                          "config": {
                            "path": "view.params.mode"
                          },
                          "transforms": [
                            {
                              "fallback": "{view.custom.editSchedule.repeatOn}",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "add",
                                  "output": "1"
                                }
                              ],
                              "outputType": "expression",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "inputBounds": {
                        "maximum": 100,
                        "minimum": 1
                      },
                      "style": {
                        "borderStyle": "solid",
                        "borderWidth": "1px",
                        "classes": "ScheduleManagement/InputFont",
                        "height": "26px"
                      }
                    },
                    "type": "ia.input.numeric-entry-field"
                  },
                  {
                    "meta": {
                      "name": "DaysWeeksOff Header"
                    },
                    "position": {
                      "shrink": 0
                    },
                    "props": {
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "fontSize": "14px",
                        "marginBottom": "2px",
                        "marginTop": "10px"
                      },
                      "text": "# Days/Weeks Off"
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "DaysWeeksOff"
                    },
                    "position": {
                      "basis": "26px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "props.enabled": {
                        "binding": {
                          "config": {
                            "path": "../Repetition Dropdown.props.value"
                          },
                          "transforms": [
                            {
                              "fallback": true,
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "Off",
                                  "output": false
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.value": {
                        "binding": {
                          "config": {
                            "path": "view.params.mode"
                          },
                          "transforms": [
                            {
                              "fallback": "{view.custom.editSchedule.repeatOff}",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "add",
                                  "output": "1"
                                }
                              ],
                              "outputType": "expression",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "inputBounds": {
                        "maximum": 100,
                        "minimum": 1
                      },
                      "style": {
                        "borderStyle": "solid",
                        "borderWidth": "1px",
                        "classes": "ScheduleManagement/InputFont",
                        "height": "26px"
                      }
                    },
                    "type": "ia.input.numeric-entry-field"
                  },
                  {
                    "meta": {
                      "name": "StartingAt Header"
                    },
                    "position": {
                      "shrink": 0
                    },
                    "props": {
                      "style": {
                        "classes": "ScheduleManagement/InputFont",
                        "fontSize": "14px",
                        "marginBottom": "2px",
                        "marginTop": "10px"
                      },
                      "text": "Starting At"
                    },
                    "type": "ia.display.label"
                  },
                  {
                    "meta": {
                      "name": "StartingAt Input"
                    },
                    "position": {
                      "basis": "26px",
                      "shrink": 0
                    },
                    "propConfig": {
                      "custom.errorMessage": {
                        "binding": {
                          "config": {
                            "path": "this.props.value"
                          },
                          "transforms": [
                            {
                              "code": "\tif (value is None or value is \"\") and self.props.enabled:\n\t\treturn \"Starting At date cannot be empty.\"\n\telse:\n\t\treturn \"\"",
                              "type": "script"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.enabled": {
                        "binding": {
                          "config": {
                            "path": "../Repetition Dropdown.props.value"
                          },
                          "transforms": [
                            {
                              "fallback": true,
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "Off",
                                  "output": false
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.style.borderColor": {
                        "binding": {
                          "config": {
                            "path": "this.custom.errorMessage"
                          },
                          "transforms": [
                            {
                              "fallback": "#FF0000",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "",
                                  "output": ""
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.style.borderStyle": {
                        "binding": {
                          "config": {
                            "path": "this.custom.errorMessage"
                          },
                          "transforms": [
                            {
                              "fallback": "dashed",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "",
                                  "output": "none"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.style.borderWidth": {
                        "binding": {
                          "config": {
                            "path": "this.custom.errorMessage"
                          },
                          "transforms": [
                            {
                              "fallback": "2px",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "",
                                  "output": "0px"
                                }
                              ],
                              "outputType": "scalar",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      },
                      "props.value": {
                        "binding": {
                          "config": {
                            "path": "view.params.mode"
                          },
                          "transforms": [
                            {
                              "fallback": "{view.custom.editSchedule.startingAt}",
                              "inputType": "scalar",
                              "mappings": [
                                {
                                  "input": "add",
                                  "output": "now(0)"
                                }
                              ],
                              "outputType": "expression",
                              "type": "map"
                            }
                          ],
                          "type": "property"
                        }
                      }
                    },
                    "props": {
                      "format": "MMM DD, YYYY",
                      "formattedValue": "Feb 10, 2025",
                      "formattedValues": {
                        "date": "Oct 22, 2020"
                      },
                      "pickerType": "date",
                      "style": {
                        "classes": "ScheduleManagement/InputFont"
                      }
                    },
                    "type": "ia.input.date-time-input"
                  }
                ],
                "meta": {
                  "name": "Repetition Inputs"
                },
                "position": {
                  "shrink": 0
                },
                "props": {
                  "direction": "column",
                  "style": {
                    "marginLeft": "10px"
                  }
                },
                "type": "ia.container.flex"
              }
            ],
            "meta": {
              "name": "Repetition"
            },
            "position": {
              "basis": "180px",
              "grow": 1,
              "shrink": 0
            },
            "props": {
              "direction": "column",
              "style": {
                "marginBottom": "5px",
                "overflow": "visible",
                "paddingRight": "10px"
              }
            },
            "type": "ia.container.flex"
          }
        ],
        "meta": {
          "name": "Schedule Repetition"
        },
        "position": {
          "grow": 1,
          "shrink": 0
        },
        "props": {
          "style": {
            "overflow": "visible"
          },
          "wrap": "wrap"
        },
        "type": "ia.container.flex"
      }
    ],
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom.allDaysSelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/All Days/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.allDaysTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/All Days/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.daysWeeksOff": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Repetition/Repetition Inputs/DaysWeeksOff.props.value"
          },
          "type": "property"
        }
      },
      "custom.daysWeeksOn": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Repetition/Repetition Inputs/DaysWeeksOn.props.value"
          },
          "type": "property"
        }
      },
      "custom.description": {
        "binding": {
          "config": {
            "path": "./Description Input.props.text"
          },
          "type": "property"
        }
      },
      "custom.fridaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Friday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.fridayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Friday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.mondaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Monday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.mondayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Monday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.name": {
        "binding": {
          "config": {
            "path": "./Name ObserveHolidays/Name/Name Input/Name.props.text"
          },
          "type": "property"
        }
      },
      "custom.observeHolidays": {
        "binding": {
          "config": {
            "path": "./Name ObserveHolidays/ObserveHolidays/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.repeat": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Repetition/Repetition Inputs/Repetition Dropdown.props.value"
          },
          "type": "property"
        }
      },
      "custom.saturdaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Saturday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.saturdayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Saturday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.startingAt": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Repetition/Repetition Inputs/StartingAt Input.props.value"
          },
          "type": "property"
        }
      },
      "custom.sundaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Sunday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.sundayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Sunday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.thursdaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Thursday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.thursdayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Thursday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.tuesdaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Tuesday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.tuesdayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Tuesday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.wednesdaySelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Wednesday/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.wednesdayTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Wednesday/TextField.props.text"
          },
          "type": "property"
        }
      },
      "custom.weekDaysSelected": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Week Days/Checkbox.props.selected"
          },
          "type": "property"
        }
      },
      "custom.weekDaysTimeRange": {
        "binding": {
          "config": {
            "path": "./Schedule Repetition/Schedule/Schedule Inputs/Week Days/TextField.props.text"
          },
          "type": "property"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {
        "borderStyle": "solid",
        "borderWidth": "1px",
        "minWidth": "320px"
      }
    },
    "type": "ia.container.flex"
  }
}